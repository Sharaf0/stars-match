{"version":3,"sources":["components/NumberComponent.js","components/NumbersComponent.js","components/StarComponent.js","Utils.js","components/StarsComponent.js","reducers/starsReducer.js","reducers/numbersReducer.js","components/GameComponent.js","config.js","App.js","serviceWorker.js","index.js"],"names":["NumberComponent","props","useState","hovered","setHover","toggleHover","isHovered","divStyle","borderWidth","borderColor","borderStyle","margin","status","cursor","backgroundColor","Error","className","style","onClick","onNumberClick","onMouseEnter","onMouseLeave","value","NumbersComponent","numbers","map","n","key","number","StarComponent","position","top","left","height","size","width","alt","src","getFilledArray","length","Array","keys","getRandomSquares","squares","counter","point","x","Math","random","y","getRandomPoint","newSquare","some","s","s1","s2","r1","right","bottom","r2","squaresIntersects","push","StarsComponent","squareSize","starSize","numbersAndSquares","useMemo","square","index","getNextStarsCount","nums","filter","_","shuffle","slice","reduce","sum","current","starsReducer","state","action","type","reject","sum2","numbersReducer","sumOfMarkedAndWrong","currentStarsCount","element","sumOfWrong","GameComponent","config","useReducer","dispatchNumbers","dispatchStarsCount","isGameOver","useEffect","initGame","useCallback","gameLimit","textAlign","starsHeight","starsWidth","App","packageJson","version","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9c9cdecf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NumberComponent = (props) => {\r\n  const [hovered, setHover] = useState(false);\r\n\r\n  const toggleHover = (isHovered) => {\r\n    setHover(isHovered);\r\n  }\r\n\r\n  const divStyle = {\r\n    borderWidth: \"1px\",\r\n    borderColor: \"grey\",\r\n    borderStyle: \"solid\",\r\n    margin: \"1px\"\r\n  };\r\n\r\n  if (hovered) {\r\n    if (props.status === \"TAKEN\")\r\n      divStyle.cursor = \"no-drop\";\r\n    else\r\n      divStyle.cursor = \"pointer\";\r\n  }\r\n\r\n  switch (props.status) {\r\n    case \"TAKEN\":\r\n      divStyle.backgroundColor = \"lightgreen\";\r\n      break;\r\n    case \"MARKED\":\r\n      divStyle.backgroundColor = \"lightblue\";\r\n      break;\r\n    case \"WRONG\":\r\n      divStyle.backgroundColor = \"orangered\";\r\n      break;\r\n    case \"DEFAULT\":\r\n      divStyle.backgroundColor = \"transparent\";\r\n      break;\r\n    default:\r\n      throw new Error(`Number status ${props.status} is not considered as a valid status`);\r\n  }\r\n  return (\r\n    <div className=\"col-lg-3\"\r\n      style={divStyle}\r\n      onClick={() => props.onNumberClick(props)}\r\n      onMouseEnter={() => toggleHover(true)}\r\n      onMouseLeave={() => toggleHover(false)}\r\n    >\r\n      <h3>{props.value}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nNumberComponent.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  onNumberClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NumberComponent;","import React from 'react';\r\nimport NumberComponent from './NumberComponent';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NumbersComponent = (props) => {\r\n  return <div className=\"row\">\r\n    {props.numbers.map(n => <NumberComponent key={n.number} value={n.number} status={n.status} onNumberClick={props.onNumberClick}></NumberComponent>)}\r\n  </div>\r\n};\r\n\r\nNumbersComponent.propTypes = {\r\n  numbers: PropTypes.arrayOf(PropTypes.shape({\r\n    number: PropTypes.number.isRequired,\r\n    status: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  onNumberClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NumbersComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StarComponent = (props) => {\r\n  return (\r\n    <div style={{position: \"absolute\", top: props.top, left: props.left, height: props.size, width: props.size }}>\r\n      <img width={props.size} alt={props.value} src=\"star.png\" ></img>\r\n    </div>\r\n  );\r\n};\r\nStarComponent.propTypes = {\r\n  top: PropTypes.number.isRequired,\r\n  left: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  size: PropTypes.number.isRequired\r\n};\r\nexport default StarComponent;","export const getFilledArray = (length) => {\r\n  return [...Array(length).keys()].map(n => n + 1);\r\n}\r\n\r\nfunction getRandomPoint(height, width) {\r\n  return {\r\n    x: Math.random() * width,\r\n    y: Math.random() * height\r\n  };\r\n}\r\n\r\nfunction rectanglesIntersect(r1, r2) {\r\n  return !(r2.left > r1.right ||\r\n    r2.right < r1.left ||\r\n    r2.top > r1.bottom ||\r\n    r2.bottom < r1.top);\r\n}\r\n\r\nfunction squaresIntersects(s1, s2, size) {\r\n  return rectanglesIntersect(\r\n    {\r\n      left: s1.left,\r\n      right: s1.left + size,\r\n      top: s1.top,\r\n      bottom: s1.top + size\r\n    }, {\r\n    left: s2.left,\r\n    right: s2.left + size,\r\n    top: s2.top,\r\n    bottom: s2.top + size\r\n  })\r\n}\r\n\r\nexport function removeRandomElements(array, n) {\r\n  while (n--) {\r\n    array.splice(Math.floor(Math.random() * array.length), 1);\r\n  }\r\n  return array;\r\n}\r\n\r\nexport function getRandomSquares(length, size, height, width) {\r\n  let squares = [];\r\n  let counter = 0;\r\n  while (squares.length < length) {\r\n    //TODO: Merge those two statements.\r\n    const point = getRandomPoint(height - size, width - size);\r\n    const newSquare = { left: point.x, top: point.y };\r\n    if (!squares.some(s => squaresIntersects(s, newSquare, size))) {\r\n      squares.push(newSquare);\r\n      counter = 0;\r\n    }\r\n    counter++;\r\n    if (counter === 1e6)\r\n      throw new Error(\"Infinite loop detected!\");\r\n  }\r\n  return squares;\r\n}","import React, { useMemo } from 'react';\r\nimport StarComponent from './StarComponent';\r\nimport { getFilledArray, getRandomSquares } from '../Utils';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StarsComponent = (props) => {\r\n  const divStyle = {\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"black\",\r\n    width: props.width,\r\n    height: props.height\r\n  };\r\n\r\n  const squareSize = props.starSize;\r\n\r\n  const numbersAndSquares = useMemo(() => {\r\n    const numbers = getFilledArray(props.number);\r\n    const squares = getRandomSquares(props.number, squareSize, props.height - divStyle.borderWidth, props.width - divStyle.borderWidth);\r\n    return squares.map((square, index) => ({\r\n      number: numbers[index],\r\n      left: square.left,\r\n      top: square.top\r\n    }));\r\n  }, [divStyle.borderWidth, props.height, props.width, props.number, squareSize]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={divStyle} >\r\n        {numbersAndSquares.map(n =>\r\n          <StarComponent key={n.number} value={n.number} size={squareSize} top={n.top} left={n.left}>\r\n          </StarComponent>)}\r\n      </div>\r\n    </>)\r\n};\r\n\r\nStarsComponent.propTypes = {\r\n  width: PropTypes.number.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  starSize: PropTypes.number.isRequired\r\n};\r\n\r\nexport default StarsComponent;","import _ from \"lodash\";\r\n\r\nexport const getNextStarsCount = (numbers) => {\r\n  //FIXME: This function is getting called multiple times.\r\n  const nums = numbers.filter(number => number.status === \"DEFAULT\").map(n => n.number);\r\n\r\n  if (nums.length === 0)\r\n    return 0;\r\n\r\n  if (nums.length === 1)\r\n    return nums[0];\r\n\r\n  const res = _.shuffle(nums)\r\n    .slice(0, 2)\r\n    .reduce((sum, current) => sum + current, 0);\r\n  return res;\r\n}\r\n\r\nexport const starsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INIT\":\r\n      return getNextStarsCount(action.numbers);\r\n    case \"CLICKED_ON_DEFAULT\":\r\n      return state === action.numbers\r\n        .filter((n) => n.status === \"MARKED\" || n.status === \"WRONG\")\r\n        .map((n) => n.number)\r\n        .reduce((sum, current) => sum + current, 0) + action.number ? getNextStarsCount(_.reject(action.numbers, { number: action.number })) : state;\r\n    case \"CLICKED_ON_WRONG\":\r\n      return state === action.numbers\r\n        .filter((n) => n.status === \"MARKED\" || n.status === \"WRONG\")\r\n        .map((n) => n.number)\r\n        .reduce((sum2, current) => sum2 + current, 0) - action.number ? getNextStarsCount(_.reject(action.numbers, { number: action.number })) : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import { getFilledArray } from \"../Utils\";\r\nimport _ from \"lodash\";\r\n\r\nexport const initializeNumbersReducer = (gameLimit) => {\r\n  return getFilledArray(gameLimit).map((n) => ({\r\n    number: n,\r\n    status: \"DEFAULT\",\r\n  }));\r\n}\r\n\r\nexport const numbersReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INIT\":\r\n      return action.numbers;\r\n    case \"CLICKED_ON_DEFAULT\":\r\n      const sumOfMarkedAndWrong =\r\n        state\r\n          .filter((n) => n.status === \"MARKED\" || n.status === \"WRONG\")\r\n          .map((n) => n.number)\r\n          .reduce((sum, current) => sum + current, 0) + action.number;\r\n      if (sumOfMarkedAndWrong === action.currentStarsCount) {\r\n        return state.map(element =>\r\n          element.status === \"MARKED\" || element.number === action.number ?\r\n            { ...element, status: \"TAKEN\" } : element);\r\n      }\r\n      if (sumOfMarkedAndWrong > action.currentStarsCount) {\r\n        return state.map(element => element.status === \"MARKED\" || element.number === action.number ?\r\n          { ...element, status: \"WRONG\" } : element);\r\n      }\r\n      if (sumOfMarkedAndWrong < action.currentStarsCount) {\r\n        if (_.some(state, (n) => n.status === \"WRONG\"))\r\n          return state.map(element => element.number === action.number ? { ...element, status: \"WRONG\" } : element);\r\n        else\r\n          return state.map(element => element.number === action.number ? { ...element, status: \"MARKED\" } : element);\r\n      }\r\n      break;\r\n    case \"CLICKED_ON_MARKED\":\r\n      return state.map(element => element.number === action.number ? { ...element, status: \"DEFAULT\" } : element);\r\n    case \"CLICKED_ON_TAKEN\":\r\n      break;\r\n    case \"CLICKED_ON_WRONG\":\r\n      const sumOfWrong =\r\n        state\r\n          .filter((n) => n.status === \"WRONG\")\r\n          .map((n) => n.number)\r\n          .reduce((sum, current) => sum + current, 0) - action.number;\r\n      if (sumOfWrong === action.currentStarsCount)\r\n        return state.map(element =>\r\n          (element.status === \"WRONG\" && element.number !== action.number) ?\r\n            { ...element, status: \"TAKEN\" } :\r\n            (element.number === action.number) ?\r\n              { ...element, status: \"DEFAULT\" } :\r\n              element\r\n        );\r\n      if (sumOfWrong > action.currentStarsCount)\r\n        return state.map(element => element.number === action.number ? { ...element, status: \"DEFAULT\" } : element);\r\n      if (sumOfWrong < action.currentStarsCount)\r\n        return state.map(element =>\r\n          (element.status === \"WRONG\" && element.number !== action.number) ?\r\n            { ...element, status: \"MARKED\" } :\r\n            (element.number === action.number) ?\r\n              { ...element, status: \"DEFAULT\" } :\r\n              element\r\n        );\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}","import React, { useEffect, useCallback, useReducer, useMemo } from \"react\";\r\nimport NumbersComponent from \"./NumbersComponent\";\r\nimport StarsComponent from \"./StarsComponent\";\r\nimport { starsReducer } from '../reducers/starsReducer';\r\nimport { initializeNumbersReducer, numbersReducer } from \"../reducers/numbersReducer\";\r\n\r\n\r\nconst GameComponent = ({ config }) => {\r\n  //TODO: Move this Config to .json or so\r\n  const [numbers, dispatchNumbers] = useReducer(numbersReducer, null);\r\n  const [currentStarsCount, dispatchStarsCount] = useReducer(starsReducer, null);\r\n  const isGameOver = useMemo(() => {\r\n    return currentStarsCount === 0;\r\n  }, [currentStarsCount]);\r\n\r\n  useEffect(() => {\r\n    initGame();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onNumberClick = useCallback((number) => {\r\n    switch (number.status) {\r\n      case \"TAKEN\":\r\n        dispatchStarsCount({ type: \"CLICKED_ON_TAKEN\", number: number.value, numbers });\r\n        dispatchNumbers({ type: \"CLICKED_ON_TAKEN\", number: number.value, currentStarsCount });\r\n        return;\r\n      case \"MARKED\":\r\n        dispatchStarsCount({ type: \"CLICKED_ON_MARKED\", number: number.value, numbers });\r\n        dispatchNumbers({ type: \"CLICKED_ON_MARKED\", number: number.value, currentStarsCount });\r\n        return;\r\n      case \"WRONG\":\r\n        dispatchStarsCount({ type: \"CLICKED_ON_WRONG\", number: number.value, numbers });\r\n        dispatchNumbers({ type: \"CLICKED_ON_WRONG\", number: number.value, currentStarsCount });\r\n        return;\r\n      case \"DEFAULT\":\r\n        dispatchStarsCount({ type: \"CLICKED_ON_DEFAULT\", number: number.value, numbers });\r\n        dispatchNumbers({ type: \"CLICKED_ON_DEFAULT\", number: number.value, currentStarsCount });\r\n        return;\r\n      default:\r\n        throw new Error(\r\n          `Number status ${number.status} is not considered as a valid status`\r\n        );\r\n    }\r\n  }, [numbers, currentStarsCount]);\r\n\r\n  const initGame = () => {\r\n    const numbers = initializeNumbersReducer(config.gameLimit);\r\n    dispatchNumbers({ type: \"INIT\", numbers });\r\n    dispatchStarsCount({ type: \"INIT\", numbers });\r\n  };\r\n\r\n  if (isGameOver)\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        You Won\r\n        <div>\r\n          <button onClick={initGame}>Play again?</button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (numbers === null) {\r\n    return 'loading...';\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div style={{ textAlign: \"center\" }} className=\"col-lg-6\">\r\n          <StarsComponent\r\n            number={currentStarsCount}\r\n            height={config.starsHeight}\r\n            width={config.starsWidth}\r\n            starSize={config.starSize}\r\n          ></StarsComponent>\r\n        </div>\r\n        <div style={{ textAlign: \"center\" }} className=\"col-lg-6\">\r\n          <NumbersComponent\r\n            numbers={numbers}\r\n            onNumberClick={onNumberClick}\r\n          ></NumbersComponent>\r\n        </div>\r\n      </div>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <span>Can't go further? </span>\r\n        <button onClick={initGame}>Play again?</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameComponent;\r\n","export default {\r\n  gameLimit: 20,\r\n  starSize: 50,\r\n  starsHeight: 400,\r\n  starsWidth: 400,\r\n};\r\n","import React from 'react';\r\nimport GameComponent from \"./components/GameComponent\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport config from './config';\r\nimport packageJson from '../package.json';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GameComponent config={config} />\r\n      <pre style={{textAlign: \"center\"}}>{`Version: ${packageJson.version}`}</pre>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}